version: "2.1"

networks:
  kong-net:

services:
  kong:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      KONG_ADMIN_LISTEN: '0.0.0.0:8001'
      # Use the config defined in config/kong.yml
      KONG_DATABASE: "postgres"
      KONG_PG_DATABASE: kong
      KONG_PG_HOST: kong-db
      KONG_PG_PASSWORD: 'postgres'
      KONG_PG_USER: 'postgres'
      # Show all output in the terminal when running with Docker
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      # Kong Client ID/Secret for Microsoft Graph API
      CLIENT_ID_FOR_MS_GRAPH_API: 'client_id'
      CLIENT_SECRET_FOR_MS_GRAPH_API: 'client_secret'
      TENANT_ID_FOR_MS_GRAPH_API: 'test.example.com'
      AUTHORIZATION_CODE_JWKS_URL: 'https://example.com/jwks'
      CLIENT_CREDENTIALS_JWKS_URL: 'https://example.com/jwks'
      SIGNED_KEY: 'testSecretKey'
      GRAPH_API_URL: 'http://graph-api-stub:8080'
      GRAPH_API_LOGIN_URL: 'http://graph-api-stub:8080'
    networks:
      - kong-net
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8443:8443"
      - "8444:8444"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure
  kong-migration:
    build:
      context: .
      dockerfile: Dockerfile
    command: kong migrations bootstrap
    depends_on:
      kong-db:
        condition: service_healthy
    environment:
      KONG_DATABASE: "postgres"
      KONG_PG_DATABASE: "kong"
      KONG_PG_HOST: "kong-db"
      KONG_PG_PASSWORD: "postgres"
      KONG_PG_USER: "postgres"
    networks:
      - kong-net
    restart: on-failure
  kong-db:
    image: postgres:${UT_POSTGRES_VER}
    ports:
      - '5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: 'kong'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_USER: 'postgres'
    networks:
      - kong-net
  kong-upstream-server:
    image: kennethreitz/httpbin:latest
    networks:
      - kong-net
  graph-api-stub:
    build:
      context: ./stub/graph-api
      dockerfile: Dockerfile
    environment:
      PORT: 8080
    networks:
      - kong-net
